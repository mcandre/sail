#!/bin/sh
unset IFS
set -euf

SAIL_VERSION='0.0.3'

usage() {
    echo "$0 [OPTIONS] <directory> [<directory> [<directory> ...]]"
    echo ""
    echo "-h\t\tEmit C header files"
    echo "-csrc\t\tEmit C implementation files"
    echo "-c\t\tEmit all C files"
    echo "-hpp\t\tEmit C++ header files"
    echo "-cppsrc\t\tEmit C++ implementation files"
    echo "-cppm\t\tEmit C++ modules"
    echo "-cpp\t\tEmit all C++ files"
    echo "-hxx\t\tEmit C and C++ header files"
    echo "-cxxsrc\t\tEmit C and C++ implementation files"
    echo "-cxx\t\tEmit all C and C++ files (default)"
    echo "-print0\t\tDelimit file paths with null terminator"
    echo "-version\tShow version info"
    echo "-help\t\tShow usage menu"
}

banner() {
    echo "sail $SAIL_VERSION"
}

# Force UNIX find in case of Cygwin
BINARY=/usr/bin/find

C_HEADER_PATTERNS='*.h'
C_IMPLEMENTATION_PATTERNS='*.c'
C_PATTERNS="${C_HEADER_PATTERNS} ${C_IMPLEMENTATION_PATTERNS}"

CPP_HEADER_PATTERNS='*.hpp'
CPP_IMPLEMENTATION_PATTERNS='*.cpp'
CPP_MODULE_PATTERNS='*.cppm'
CPP_PATTERNS="${CPP_HEADER_PATTERNS} ${CPP_IMPLEMENTATION_PATTERNS} ${CPP_MODULE_PATTERNS}"

CXX_HEADER_PATTERNS="${C_HEADER_PATTERNS} ${CPP_HEADER_PATTERNS}"
CXX_IMPLEMENTATION_PATTERNS="${C_IMPLEMENTATION_PATTERNS} ${CPP_IMPLEMENTATION_PATTERNS}"
CXX_PATTERNS="${CXX_HEADER_PATTERNS} ${CXX_IMPLEMENTATION_PATTERNS} ${CPP_MODULE_PATTERNS}"

PRINT='-print'

main() {
    LANGUAGES="$1"
    shift

    DIRS="$*"

    set --

    for LANGUAGE in $LANGUAGES; do
        case "$LANGUAGE" in
        '-h')
            eval "set -- $* $C_HEADER_PATTERNS"
            ;;
        '-csrc')
            eval "set -- $* $C_IMPLEMENTATION_PATTERNS"
            ;;
        '-c')
            eval "set -- $* $C_PATTERNS"
            ;;
        '-hpp')
            eval "set -- $* $CPP_HEADER_PATTERNS"
            ;;
        '-cppsrc')
            eval "set -- $* $CPP_IMPLEMENTATION_PATTERNS"
            ;;
        '-cppm')
            eval "set -- $* $CPP_MODULE_PATTERNS"
            ;;
        '-cpp')
            eval "set -- $* $CPP_PATTERNS"
            ;;
        '-hxx')
            eval "set -- $* $CXX_HEADER_PATTERNS"
            ;;
        '-cxxsrc')
            eval "set -- $* $CXX_IMPLEMENTATION_PATTERNS"
            ;;
        '-cxx')
            eval "set -- $* $CXX_PATTERNS"
            ;;
        *)
            shift
            usage
            exit 1
            ;;
        esac
    done

    PARTS=''

    while [ "$#" -gt 1 ]; do
        PARTS="${PARTS}-name $1 -o "
        shift
    done

    PARTS="${PARTS}-name $1"

    for DIR in $DIRS; do
        eval "$BINARY $DIR -type f \( $PARTS \) $PRINT"
    done
}

if [ "$#" -lt 1 ]; then
    usage
    exit 1
fi

LANGUAGES='-cxx'

while [ "$#" -gt 0 ]; do
    case "$1" in
    '-h')
        LANGUAGES='-h'
        shift
        ;;
    '-csrc')
        LANGUAGES='-csrc'
        shift
        ;;
    '-c')
        LANGUAGES='-c'
        shift
        ;;
    '-hpp')
        LANGUAGES='-hpp'
        shift
        ;;
    '-cppsrc')
        LANGUAGES='-cppsrc'
        shift
        ;;
    '-cppm')
        LANGUAGES='-cppm'
        shift
        ;;
    '-cpp')
        LANGUAGES='-cpp'
        shift
        ;;
    '-hxx')
        LANGUAGES='-hxx'
        shift
        ;;
    '-cxxsrc')
        LANGUAGES='-cxxsrc'
        shift
        ;;
    '-cxx')
        LANGUAGES='-cxx'
        shift
        ;;
    '-print0')
        PRINT='-print0'
        shift
        ;;
    '-version')
        shift
        banner
        exit
        ;;
    '-help')
        shift
        usage
        exit
        ;;
    *)
        break
        ;;
    esac
done

if [ "$#" -lt 1 ]; then
    usage
    exit 1
fi

DIRS="$*"

main "$LANGUAGES" "$DIRS"
